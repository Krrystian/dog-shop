generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  image          String?
  emailVerified  DateTime?
  hashedPassword String?
  role           String    @default("user")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  favoriteIds    String[]  @db.ObjectId
  accounts       Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Product {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         String
  image         String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  categoriesIds String[]        @db.ObjectId
  category      Category[]      @relation(fields: [categoriesIds], references: [id])
  ProductDetail ProductDetail[]
}

model ProductDetail {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Product     Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   String?  @db.ObjectId
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  productsIds String[]  @db.ObjectId
  products    Product[] @relation(fields: [productsIds], references: [id])
}
